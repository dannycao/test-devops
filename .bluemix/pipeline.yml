stages:
- name: Build Stage
  inputs:
  - type: git
    branch: master
    service: ${REPO}
  jobs:
  - name: Container Build
    type: builder
    artifact_dir: ''
    build_type: shell
    script: |-
      #!/bin/bash

      ###########################################################
      # Install Docker                                          #
      ###########################################################
      install_docker_run_build() {
          echo "installing docker"
          echo "TMPDIR: ${TMPDIR}"
          apt-get -y install apt-transport-https ca-certificates &> $TMPDIR/dockerinst.out
          apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D &>> $TMPDIR/dockerinst.out
          add-apt-repository "deb https://apt.dockerproject.org/repo ubuntu-precise main" &>> $TMPDIR/dockerinst.out
          apt-get update &>> $TMPDIR/dockerinst.out
          apt-get -y install docker-engine &>> $TMPDIR/dockerinst.out
          local RESULT=$?
          if [ $RESULT -ne 0 ]; then
              echo "Installing docker.io failed with return code ${RESULT}"
              cat $TMPDIR/dockerinst.out
              apt-get -y install docker.engine &> $TMPDIR/dockerinst.out
              RESULT=$?
              if [ $RESULT -ne 0 ]; then
                  echo "Installing docker.engine failed with return code ${RESULT}"
                  cat $TMPDIR/dockerinst.out
                  return 1
              fi
          fi
          DOCKER_VER=$(docker -v)
          echo "Successfully installed ${DOCKER_VER}"

          IMAGE_NAME=ddcao-5sep-529
          REGISTRY_URL=registry.stage1.ng.bluemix.net/ddcao_5sep_namespace
          FULL_REPOSITORY_NAME=${REGISTRY_URL}/${IMAGE_NAME}:v1.0.0

          echo "FULL_REPOSITORY_NAME: ${FULL_REPOSITORY_NAME}"
          
          if [ -f Dockerfile ]; then 
            # build image
            echo "BUILDING Dockerfile"

            docker build -t "${FULL_REPOSITORY_NAME}" .

            echo "BUILDING Dockerfile finished"

            docker push "${FULL_REPOSITORY_NAME}"
          else 
            echo "Dockerfile not found at the repository root"
            exit 1
          fi
      }

      install_docker_run_build
  - name: Post Build
    type: builder
    artifact_dir: ''
    build_type: shell
    script: |-
      #!/bin/bash
      if  [[ -f post_build.sh ]]; then
        chmod +x post_build.sh;
        echo "executing the post_build script";
        sh post_build.sh;
      else
        echo "the post_build script does not exist";
      fi
# - name: Deploy Stage
#   inputs:
#   - type: job
#     stage: Build Stage
#     job: Container Build
#   triggers:
#   - type: stage
#   jobs:
#   - name: Deploy
#     type: deployer
#     target:
#       region_id: ${CF_REGION_ID}
#       organization: ${CF_ORGANIZATION}
#       space: ${CF_SPACE}
#     script: |
#       #!/bin/bash
#       #set -x

#       helm init
#       helm install ./chart/ddcaocoolapp
#       echo "finished installing chart"